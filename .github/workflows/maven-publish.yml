name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger on push to the master branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'

    - name: Build with Maven
      run: ./mvnw clean package

    - name: Archive JAR artifact
      uses: actions/upload-artifact@v2
      with:
        name: spring-boot-app
        path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download JAR artifact
      uses: actions/download-artifact@v2
      with:
        name: spring-boot-app
        path: ./app

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    # - name: Deploy to EC2
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: ${{ secrets.AWS_REGION }}
    #     EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
    #     KEY_PATH: ${{ secrets.SSH_KEY_PATH }}
    #     USER: ${{ secrets.EC2_USER }}
    #     HOST: ${{ secrets.EC2_HOST }}
    #   run: |
    #     scp -o StrictHostKeyChecking=no -i $KEY_PATH ./app/*.jar $USER@$HOST:/home/ec2-user/app.jar
    #     ssh -o StrictHostKeyChecking=no -i $KEY_PATH $USER@$HOST << 'EOF'
    #       pkill -f 'java -jar' || true
    #       nohup java -jar /home/ec2-user/app.jar > /dev/null 2>&1 &
    #     EOF
